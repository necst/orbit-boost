// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module ldl_dsolve_compute_Pipeline_read_from_stream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_stream_dout,
        X_stream_num_data_valid,
        X_stream_fifo_cap,
        X_stream_empty_n,
        X_stream_read,
        D_stream_dout,
        D_stream_num_data_valid,
        D_stream_fifo_cap,
        D_stream_empty_n,
        D_stream_read,
        X2_stream_din,
        X2_stream_num_data_valid,
        X2_stream_fifo_cap,
        X2_stream_full_n,
        X2_stream_write,
        empty
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] X_stream_dout;
input  [2:0] X_stream_num_data_valid;
input  [2:0] X_stream_fifo_cap;
input   X_stream_empty_n;
output   X_stream_read;
input  [127:0] D_stream_dout;
input  [2:0] D_stream_num_data_valid;
input  [2:0] D_stream_fifo_cap;
input   D_stream_empty_n;
output   D_stream_read;
output  [127:0] X2_stream_din;
input  [2:0] X2_stream_num_data_valid;
input  [2:0] X2_stream_fifo_cap;
input   X2_stream_full_n;
output   X2_stream_write;
input  [31:0] empty;

reg ap_idle;
reg X2_stream_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_idle_pp0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln53_fu_95_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    X_stream_blk_n;
wire    ap_block_pp0_stage0;
wire    D_stream_blk_n;
wire    X2_stream_blk_n;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] w1_a_fu_112_p1;
reg   [63:0] w1_a_reg_182;
reg   [63:0] w1_b_reg_187;
wire   [63:0] w2_a_fu_126_p1;
reg   [63:0] w2_a_reg_192;
reg   [63:0] w2_b_reg_197;
wire   [63:0] grp_fu_79_p2;
reg   [63:0] tout_a_reg_222;
wire   [63:0] grp_fu_83_p2;
reg   [63:0] tout_b_reg_227;
reg   [31:0] i_fu_50;
wire   [31:0] i_3_fu_101_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i_2;
reg    X_stream_read_local;
reg    D_stream_read_local;
wire   [127:0] writeconcat_fu_162_p3;
wire    ap_block_pp0_stage0_01001;
reg    X2_stream_write_local;
wire   [63:0] grp_fu_79_p0;
wire   [63:0] grp_fu_79_p1;
wire   [63:0] grp_fu_83_p0;
wire   [63:0] grp_fu_83_p1;
wire   [63:0] outb_fu_159_p1;
wire   [63:0] outa_fu_156_p1;
wire    ap_continue_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_done_int_frp;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [24:0] frp_pipeline_valid_U_valid_out;
wire   [5:0] frp_pipeline_valid_U_num_valid_datasets;
wire   [127:0] pf_X2_stream_U_data_out;
wire    pf_X2_stream_U_data_out_vld;
wire    pf_X2_stream_U_pf_ready;
wire    pf_X2_stream_U_pf_done;
reg   [0:0] ap_frp_data_next_issued_X_stream;
reg    ap_frp_data_issued_nxt_X_stream_op40;
reg   [4:0] ap_frp_data_req_X_stream;
reg   [0:0] ap_frp_data_req_X_stream_op40;
reg   [0:0] ap_frp_data_next_issued_D_stream;
reg    ap_frp_data_issued_nxt_D_stream_op41;
reg   [4:0] ap_frp_data_req_D_stream;
reg   [0:0] ap_frp_data_req_D_stream_op41;
reg    ap_condition_frp_roi_pvb_no_fwd_prs;
reg    ap_condition_frp_pvb_no_bkwd_prs;
reg    ap_condition_frp_pvb_pf_start;
reg    ap_frp_vld_in;
reg    frp_pipeline_valid_U_exitcond;
reg    pf_all_done;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 i_fu_50 = 32'd0;
#0 ap_frp_data_req_X_stream = 5'd0;
#0 ap_frp_data_req_D_stream = 5'd0;
#0 pf_all_done = 1'b0;
end

ldl_dsolve_ddiv_64ns_64ns_64_22_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_22_no_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_79_p0),
    .din1(grp_fu_79_p1),
    .ce(1'b1),
    .dout(grp_fu_79_p2)
);

ldl_dsolve_ddiv_64ns_64ns_64_22_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_22_no_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_83_p0),
    .din1(grp_fu_83_p1),
    .ce(1'b1),
    .dout(grp_fu_83_p2)
);

ldl_dsolve_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(pf_all_done),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(pf_all_done)
);

ldl_dsolve_frp_pipeline_valid #(
    .PipelineLatency( 25 ),
    .PipelineII( 1 ),
    .CeilLog2Stages( 5 ),
    .ExitLatency( 0 ))
frp_pipeline_valid_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .valid_in(ap_frp_vld_in),
    .exitcond(frp_pipeline_valid_U_exitcond),
    .valid_out(frp_pipeline_valid_U_valid_out),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

ldl_dsolve_frp_fifoout #(
    .BlockingType( 1 ),
    .PipeLatency( 25 ),
    .PipelineII( 1 ),
    .DataWidth( 128 ),
    .NumWrites( 1 ),
    .CeilLog2Stages( 5 ),
    .CeilLog2FDepth( 5 ),
    .PfAllDoneEnable( 2 ))
pf_X2_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(writeconcat_fu_162_p3),
    .data_out(pf_X2_stream_U_data_out),
    .valid(frp_pipeline_valid_U_valid_out),
    .data_in_vld(X2_stream_write_local),
    .data_out_vld(pf_X2_stream_U_data_out_vld),
    .data_in_last(ap_done_int_frp),
    .pf_continue(1'b1),
    .pf_all_done(pf_all_done),
    .pf_ready(pf_X2_stream_U_pf_ready),
    .pf_done(pf_X2_stream_U_pf_done),
    .data_out_read(X2_stream_full_n),
    .ap_start(1'b0),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_frp_data_req_D_stream <= 5'd0;
    end else begin
        if ((frp_pipeline_valid_U_valid_out[5'd0] == 1'b0)) begin
            ap_frp_data_req_D_stream <= (ap_frp_data_req_D_stream - ap_frp_data_next_issued_D_stream);
        end else begin
            ap_frp_data_req_D_stream <= ((ap_frp_data_req_D_stream + ap_frp_data_req_D_stream_op41) - ap_frp_data_next_issued_D_stream);
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_frp_data_req_X_stream <= 5'd0;
    end else begin
        if ((frp_pipeline_valid_U_valid_out[5'd0] == 1'b0)) begin
            ap_frp_data_req_X_stream <= (ap_frp_data_req_X_stream - ap_frp_data_next_issued_X_stream);
        end else begin
            ap_frp_data_req_X_stream <= ((ap_frp_data_req_X_stream + ap_frp_data_req_X_stream_op40) - ap_frp_data_next_issued_X_stream);
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pf_all_done <= 1'b0;
    end else begin
        pf_all_done <= pf_X2_stream_U_pf_done;
    end
end

always @ (posedge ap_clk) begin
    if (((frp_pipeline_valid_U_valid_out[5'd0] == 1'b1) & ((icmp_ln53_fu_95_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        i_fu_50 <= i_3_fu_101_p2;
    end else if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_50 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        tout_a_reg_222 <= grp_fu_79_p2;
        tout_b_reg_227 <= grp_fu_83_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        w1_a_reg_182 <= w1_a_fu_112_p1;
        w1_b_reg_187 <= {{X_stream_dout[127:64]}};
        w2_a_reg_192 <= w2_a_fu_126_p1;
        w2_b_reg_197 <= {{D_stream_dout[127:64]}};
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D_stream_read_local = 1'b1;
    end else begin
        D_stream_read_local = 1'b0;
    end
end

always @ (*) begin
    if ((pf_X2_stream_U_data_out_vld == 1'b1)) begin
        X2_stream_write = 1'b1;
    end else begin
        X2_stream_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        X2_stream_write_local = 1'b1;
    end else begin
        X2_stream_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        X_stream_read_local = 1'b1;
    end else begin
        X_stream_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd0] == 1'b1) & ((icmp_ln53_fu_95_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter23_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int_frp = 1'b1;
    end else begin
        ap_done_int_frp = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1)) begin
        ap_enable_reg_pp0_iter1 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter1 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd10] == 1'b1)) begin
        ap_enable_reg_pp0_iter10 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter10 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd11] == 1'b1)) begin
        ap_enable_reg_pp0_iter11 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter11 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd12] == 1'b1)) begin
        ap_enable_reg_pp0_iter12 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter12 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd13] == 1'b1)) begin
        ap_enable_reg_pp0_iter13 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter13 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd14] == 1'b1)) begin
        ap_enable_reg_pp0_iter14 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter14 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd15] == 1'b1)) begin
        ap_enable_reg_pp0_iter15 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter15 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd16] == 1'b1)) begin
        ap_enable_reg_pp0_iter16 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter16 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd17] == 1'b1)) begin
        ap_enable_reg_pp0_iter17 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter17 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd18] == 1'b1)) begin
        ap_enable_reg_pp0_iter18 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter18 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd19] == 1'b1)) begin
        ap_enable_reg_pp0_iter19 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter19 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd2] == 1'b1)) begin
        ap_enable_reg_pp0_iter2 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter2 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd20] == 1'b1)) begin
        ap_enable_reg_pp0_iter20 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter20 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd21] == 1'b1)) begin
        ap_enable_reg_pp0_iter21 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter21 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd22] == 1'b1)) begin
        ap_enable_reg_pp0_iter22 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter22 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd23] == 1'b1)) begin
        ap_enable_reg_pp0_iter23 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter23 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd24] == 1'b1)) begin
        ap_enable_reg_pp0_iter24 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter24 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd3] == 1'b1)) begin
        ap_enable_reg_pp0_iter3 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter3 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd4] == 1'b1)) begin
        ap_enable_reg_pp0_iter4 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter4 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd5] == 1'b1)) begin
        ap_enable_reg_pp0_iter5 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter5 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd6] == 1'b1)) begin
        ap_enable_reg_pp0_iter6 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter6 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd7] == 1'b1)) begin
        ap_enable_reg_pp0_iter7 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter7 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd8] == 1'b1)) begin
        ap_enable_reg_pp0_iter8 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter8 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd9] == 1'b1)) begin
        ap_enable_reg_pp0_iter9 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter9 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1)) begin
        ap_frp_data_issued_nxt_D_stream_op41 = 1'b1;
    end else begin
        ap_frp_data_issued_nxt_D_stream_op41 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1)) begin
        ap_frp_data_issued_nxt_X_stream_op40 = 1'b1;
    end else begin
        ap_frp_data_issued_nxt_X_stream_op40 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_frp_data_issued_nxt_D_stream_op41 == 1'b1)) begin
        ap_frp_data_next_issued_D_stream = 1'd1;
    end else begin
        ap_frp_data_next_issued_D_stream = 1'd0;
    end
end

always @ (*) begin
    if ((ap_frp_data_issued_nxt_X_stream_op40 == 1'b1)) begin
        ap_frp_data_next_issued_X_stream = 1'd1;
    end else begin
        ap_frp_data_next_issued_X_stream = 1'd0;
    end
end

always @ (*) begin
    if ((~(icmp_ln53_fu_95_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_frp_data_req_D_stream_op41 = 1'd1;
    end else begin
        ap_frp_data_req_D_stream_op41 = 1'd0;
    end
end

always @ (*) begin
    if ((~(icmp_ln53_fu_95_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_frp_data_req_X_stream_op40 = 1'd1;
    end else begin
        ap_frp_data_req_X_stream_op40 = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_frp_pvb_pf_start) & (1'b1 == ap_condition_frp_pvb_no_bkwd_prs) & (1'b1 == ap_condition_frp_roi_pvb_no_fwd_prs))) begin
        ap_frp_vld_in = 1'b1;
    end else begin
        ap_frp_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd0] == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_50;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln53_fu_95_p2 == 1'd1))) begin
        frp_pipeline_valid_U_exitcond = 1'b1;
    end else begin
        frp_pipeline_valid_U_exitcond = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign D_stream_blk_n = 1'b1;

assign D_stream_read = D_stream_read_local;

assign X2_stream_blk_n = 1'b1;

assign X2_stream_din = pf_X2_stream_U_data_out;

assign X_stream_blk_n = 1'b1;

assign X_stream_read = X_stream_read_local;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = 1'b0;

assign ap_block_pp0_stage0_01001 = 1'b0;

assign ap_block_pp0_stage0_11001 = 1'b0;

assign ap_block_pp0_stage0_subdone = 1'b0;

assign ap_block_state25_pp0_stage0_iter24 = (1'b1 == 1'b0);

assign ap_block_state2_pp0_stage0_iter1 = (1'b1 == 1'b0);

always @ (*) begin
    ap_condition_frp_pvb_no_bkwd_prs = (pf_X2_stream_U_pf_ready == 1'b1);
end

always @ (*) begin
    ap_condition_frp_pvb_pf_start = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_frp_roi_pvb_no_fwd_prs = ~((D_stream_num_data_valid < (ap_frp_data_req_D_stream + ap_frp_data_req_D_stream_op41)) | (X_stream_num_data_valid < (ap_frp_data_req_X_stream + ap_frp_data_req_X_stream_op40)));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign grp_fu_79_p0 = w1_a_reg_182;

assign grp_fu_79_p1 = w2_a_reg_192;

assign grp_fu_83_p0 = w1_b_reg_187;

assign grp_fu_83_p1 = w2_b_reg_197;

assign i_3_fu_101_p2 = (ap_sig_allocacmp_i_2 + 32'd2);

assign icmp_ln53_fu_95_p2 = ((ap_sig_allocacmp_i_2 == empty) ? 1'b1 : 1'b0);

assign outa_fu_156_p1 = tout_a_reg_222;

assign outb_fu_159_p1 = tout_b_reg_227;

assign w1_a_fu_112_p1 = X_stream_dout[63:0];

assign w2_a_fu_126_p1 = D_stream_dout[63:0];

assign writeconcat_fu_162_p3 = {{outb_fu_159_p1}, {outa_fu_156_p1}};

endmodule //ldl_dsolve_compute_Pipeline_read_from_stream
